version: '3'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-container
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always
    networks:
      - my_network
    volumes:
      - ./mysql_data:/var/lib/mysql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch-container
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - my_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0 # ES 버전과 동일해야 함
    container_name: logstash-container
    volumes:
      - ./libs/mysql-connector-j-9.0.0.jar:/usr/share/logstash/libs/mysql-connector-j-9.0.0.jar
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./libs/mysql-connector-j-9.0.0.jar:/usr/share/logstash/mysql-connector-j-9.0.0.jar
    ports:
      - "5044:5044"
    environment:
      - "XPACK_MONITORING_ENABLED=false"
      - JDBC_CONNECTION_STRING=${JDBC_CONNECTION_STRING}
      - JDBC_USER=${JDBC_USER}
      - JDBC_PASSWORD=${JDBC_PASSWORD}
    networks:
      - my_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana-container
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
